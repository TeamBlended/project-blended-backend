plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.gdsc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "16"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.google.http-client:google-http-client-gson:1.41.0'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    //스웨거
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

    // postgres
    implementation 'org.postgresql:postgresql'

    // hibernate-spatial 좌표를 위한거
    implementation 'org.hibernate:hibernate-spatial:5.6.11.Final'

    //oauth2.0
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'com.google.api-client', name: 'google-api-client-jackson2', version: '1.20.0'

    //jwt
    compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.auth0:java-jwt:4.0.0'

    //security, validation
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //aws sdk
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}


/*compileJava {
    options.compilerArgs += ['--enable-preview']
}

compileTestJava {
    options.compilerArgs += ['--enable-preview']
}*/

tasks.named('test') {
    useJUnitPlatform()
    //jvmArgs(['--enable-preview'])
}
targetCompatibility = JavaVersion.VERSION_16
